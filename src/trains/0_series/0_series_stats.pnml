/* NUMBER OF CARS */

    switch(FEAT_TRAINS, SELF, sw_0_series_number_of_cars, cargo_subtype) {
            2: return 12;     
            return 16;       
        }

    switch(FEAT_TRAINS, SELF, sw_0_series_number_of_motor_cars, cargo_subtype) {
            2: return 12;       // All cars motorised   
            return 16;          // All cars motorised
        }

/* LENGTH*/
    switch(FEAT_TRAINS, SELF, sw_0_series_length, cargo_subtype) {
        2: sw_length_1_1_8_2;      // Nose Set
        sw_length_2_8_2;                // All other 16-length sets
    }

/* RUNNING COSTS */
    running_cost_0_series = 187;    // 150 is approx JPS
    
    switch (FEAT_TRAINS, SELF, sw_0_series_running_costs, current_speed) {
        0: running_cost_0_series / 10 * sw_0_series_number_of_cars();           // Stopped
        1..15: running_cost_0_series / 4 * sw_0_series_number_of_cars(); 	    // Moving below ~33.5 mph
        running_cost_0_series * sw_0_series_number_of_cars(); 				    // Track speed
    }

/* WEIGHT */  
    weight_0_series = 61;           // 61t per JPS
    
/* POWER */
    power_per_motor_0_series = 248; // in hp (185 kW)
    
/* SPEED */
    switch (FEAT_TRAINS, SELF, sw_0_series_speed, current_year) {
	    0..1986: return 210;                        // Until 1986, Speed = 210 km/h
	    return 220;                                 // After 1986, Speed = 220 km/h
    }

/* CARGO CAPACITY 

    16-car JPS  1248/1560/1872/2184
    12-car JPS  936/1170/1404/1638

        16-car  12-car 
    IRL 1340    ?        
    RW  1344    1008               
    LS  2016    1488             
    DC  2688    2016      

*/

    // 16 car
    switch(FEAT_TRAINS, SELF, sw_0_series_param_cargo_capacity_16car, param_basecapacity) {
        0: return 28;       // 1x Real World Capacity
        2: return 56;       // 2x Double Real World Capacity
        return 42;          // 1.5x Long Sprite Adjusted Capacity 
    }

    // 12 car
    switch(FEAT_TRAINS, SELF, sw_0_series_param_cargo_capacity_12car, param_basecapacity) {
        0: return 21;       // 1x Real World Capacity
        2: return 42;       // 2x Double Real World Capacity
        return 31;          // 1.5x Long Sprite Adjusted Capacity 
    }

    switch(FEAT_TRAINS, SELF, sw_0_series_cargo_capacity, cargo_subtype) {
        2: sw_0_series_param_cargo_capacity_12car;  
        sw_0_series_param_cargo_capacity_16car;
    }

/* REFIT COST */

    switch(FEAT_TRAINS, SELF, sw_0_series_refit_cost_minus2, cargo_subtype) {
        2: return 7;       // Currently 'Nose', Cost to move to 'Year Dependent Livery'       
        return 0;
    }
    
    switch(FEAT_TRAINS, SELF, sw_0_series_refit_cost_minus1_check, cargo_subtype) {
        3: return -6;       // Currently 'Kodama', Refund to move to 'Nose'     
        return 0;           // Currently 'Original' moving to 'Year Dependent'    
    }

    switch(FEAT_TRAINS, SELF, sw_0_series_refit_cost_minus1, cargo_subtype) {
        2: return 7;       // Currently 'Nose', Cost to move to 'Original'     
        sw_0_series_refit_cost_minus1_check;
    }

    switch(FEAT_TRAINS, SELF, sw_0_series_refit_cost_plus1_check, cargo_subtype) {
        1: return -6;       // Currently 'Original', Refund to move to 'Nose'               
        return 0;           // Currently 'Year Dependent' moving to 'Original' 
    }

    switch(FEAT_TRAINS, SELF, sw_0_series_refit_cost_plus1, cargo_subtype) {
        2: return 7;       // Currently 'Nose', Cost to move to 'Kodama'               
        sw_0_series_refit_cost_plus1_check;
    }

    switch(FEAT_TRAINS, SELF, sw_0_series_refit_cost_plus2, cargo_subtype) {
        0: return -6;      // Currently 'Year Depedent', Refund to move to    
        return 0;
    }

    switch(FEAT_TRAINS, SELF, sw_0_series_refit_cost, var[0x10,8,0xFF] - cargo_subtype) {
        /* Refit cost based on difference between target cargo sybtype and current cargo subtype.
	    Refitting to fewer carriages refunds money, while adding carriages costs (more) money.    */    
	    -3:             0; 
        -2:				sw_0_series_refit_cost_minus2;
	    -1:				sw_0_series_refit_cost_minus1;
	    0:				0;
	    1:				sw_0_series_refit_cost_plus1;
	    2:				sw_0_series_refit_cost_plus2;
        3:              0;
	    return CB_FAILED;
    }
