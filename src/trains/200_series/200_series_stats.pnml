/* Begin 200 Series STATS */

/* LENGTH*/

    // Make the Middle long sprite length 8 and the dummy sprites length 2
    switch (FEAT_TRAINS, SELF, sw_200_series_length_standard, position_in_consist%3) {
        1: return 8;
        return 2;
    }

    // Make a 12 car set by adjusting sprite sizes
    switch(FEAT_TRAINS, SELF, sw_200_series_shorten_12_car_vehicle, position_in_consist%4) {
        2: return 8;
        3: return 2;
        return 1;
    }

    // Make a 10 car set by adjusting sprite sizes
    switch(FEAT_TRAINS, SELF, sw_200_series_shorten_10_car_vehicle_majority, position_in_consist%5) {
        2: return 8;
        return 1;
    }

    switch(FEAT_TRAINS, SELF, sw_200_series_shorten_10_car_vehicle, position_in_consist) {
        0..44: sw_200_series_shorten_10_car_vehicle_majority;
        46: return 8;
        return 2;
    }

    // Make a 8 car set by adjusting sprite sizes
    switch(FEAT_TRAINS, SELF, sw_200_series_shorten_8_car_vehicle, position_in_consist%6) {
        2: return 7;
        return 1;
    }

    switch(FEAT_TRAINS, SELF, sw_200_series_length, cargo_subtype) {
        2: sw_200_series_shorten_10_car_vehicle;        // 10-car Original
        3: sw_200_series_shorten_8_car_vehicle;         // 8-car Original
        5: sw_200_series_length_standard;               // 16-car Sharknose
        6: sw_200_series_shorten_10_car_vehicle;        // 10-car Refurbished
        7: sw_200_series_shorten_8_car_vehicle;         // 8-car Refurbished
        sw_200_series_shorten_12_car_vehicle;           // All other 12-length sets
    }

/* CARGO CAPACITY

    JPS 16-car  624/780/936/1092
    JPS 12-car
    JPS 10-car 
    JPS 8-car      

        16-car  12-car  10-car  8-car
    IRL 1324     ?     
    RW  1344     432     
    LS  864     648       
    DC  1152    864       

    */

    // Passenger Capacities for each parameter level
    switch(FEAT_TRAINS, SELF, sw_200_series_cargo_capacity_16car, param_basecapacity) {
        0: return 28;       // 1x Real World Capacity
        2: return 56;       // 2x Double Real World Capacity
        return 42;          // 1.5x Long Sprite Adjusted Capacity 
    }

    switch(FEAT_TRAINS, SELF, sw_200_series_cargo_capacity_12car, param_basecapacity) {
        0: return 21;       // 1x Real World Capacity
        2: return 42;       // 2x Double Real World Capacity
        return 31;          // 1.5x Long Sprite Adjusted Capacity 
    }

    switch(FEAT_TRAINS, SELF, sw_200_series_cargo_capacity_10car, param_basecapacity) {
        0: return 17;       // 1x Real World Capacity
        2: return 35;       // 2x Double Real World Capacity
        return 26;          // 1.5x Long Sprite Adjusted Capacity 
    }

    switch(FEAT_TRAINS, SELF, sw_200_series_cargo_capacity_08car, param_basecapacity) {
        0: return 14;       // 1x Real World Capacity
        2: return 28;       // 2x Double Real World Capacity
        return 21;          // 1.5x Long Sprite Adjusted Capacity 
    }

    // Scaling factor for each length of consist
    switch(FEAT_TRAINS, SELF, sw_200_series_cargo_capacity, cargo_subtype) {
        2: sw_200_series_cargo_capacity_10car; 
        3: sw_200_series_cargo_capacity_08car; 
        5: sw_200_series_cargo_capacity_16car;     
        6: sw_200_series_cargo_capacity_10car;
        7: sw_200_series_cargo_capacity_08car;
        sw_200_series_cargo_capacity_12car;
    }

/* RUNNING COSTS */
    switch(FEAT_TRAINS, SELF, sw_200_series_running_costs, cargo_subtype) {
        2: return 187; 
        3: return 150;
        5: return 300;
        6: return 187;
        7: return 150;
        return 225;
    }

/* WEIGHT */
    switch(FEAT_TRAINS, SELF, sw_200_series_weight, cargo_subtype) {
        2: return 58*10;    // 58t (per JPS) x 10 cars     
        3: return 58*8;     // 58t (per JPS) x 08 cars     
        5: return 58*16;    // 58t (per JPS) x 16 cars     
        6: return 58*10;    // 58t (per JPS) x 10 cars    
        7: return 58*8;     // 58t (per JPS) x 08 cars     
        return 58*12;       // 58t (per JPS) x 12 cars   
    }

/* POWER */
    switch(FEAT_TRAINS, SELF, sw_200_series_power, cargo_subtype) {
        2: return 230*4*10;     // 230kW (100 Series Motor Power) x 4 (motors per car) x 10 cars
        3: return 230*4*8;      // 230kW (100 Series Motor Power) x 4 (motors per car) x 08 cars
        5: return 230*4*16;     // 230kW (100 Series Motor Power) x 4 (motors per car) x 16 cars
        6: return 230*4*10;     // 230kW (100 Series Motor Power) x 4 (motors per car) x 10 cars
        7: return 230*4*8;      // 230kW (100 Series Motor Power) x 4 (motors per car) x 08 cars
        return 230*4*12;        // 230kW (100 Series Motor Power) x 4 (motors per car) x 12 cars
    }

/* SPEED */
    switch(FEAT_TRAINS, SELF, sw_200_series_speed, cargo_subtype) {
        1..3: return 210;   // Original speed
        return 240;         // Sharknose and Refurbished Speed
    }
