 grf {
	grfid:	"KR03";
	name:	string(STR_GRF_NAME);
	desc:	string(STR_GRF_DESC);
	version:	1;
	min_compatible_version: 1;
		//japanset3 removal
		param 4 {
			 param_japansetdisable {
					name: string(STR_PARAM_NAME_JAPANSETDISABLE);
					desc: string(STR_PARAM_DESC_JAPANSETDISABLE);
					type: bool;
					bit:  0;
					def_value: 0;
			 }
		}
		//basecosts
		param 0 {
				param_basecostbuy {
						type: int;
						name: string(STR_PARAM_NAME_BASECOSTMODBUY);
						desc: string(STR_PARAM_DESC_BASECOSTMODBUY);
						min_value: 0;
						max_value: 2;
						def_value: 1;
						names: {
												0: string(STR_PARAM_LOW);
												1: string(STR_PARAM_NORMAL);
												2: string(STR_PARAM_HIGH);
						};
				}
		}
		//runningcosts
		param 1 {
				param_basecostrun {
						type: int;
						name: string(STR_PARAM_NAME_BASECOSTMODRUN);
						desc: string(STR_PARAM_DESC_BASECOSTMODRUN);
						min_value: 0;
						max_value: 4;
						def_value: 2;
						names: {
												0: string(STR_PARAM_VLOW);
												1: string(STR_PARAM_LOW);
												2: string(STR_PARAM_NORMAL);
												3: string(STR_PARAM_HIGH);
												4: string(STR_PARAM_VHIGH);
						};
				}
		}
		//pax capacity
		param 2 {
				param_basecapacity {
						type: int;
						name: string(STR_PARAM_NAME_BASECAPACITY);
						desc: string(STR_PARAM_DESC_BASECAPACITY);
						min_value: 0;
						max_value: 3;
						def_value: 1;
						names: {
												0: string(STR_PARAM_LOW);
												1: string(STR_PARAM_NORMAL);
												2: string(STR_PARAM_HIGH);
												3: string(STR_PARAM_VHIGH);
												//4: string(STR_PARAM_REAL);
						};
				}
		}
		//extra capacity for locals
		param 3 {
			 param_boostcapacity {
					name: string(STR_PARAM_NAME_BOOSTCAPACITY);
					desc: string(STR_PARAM_DESC_BOOSTCAPACITY);
					type: bool;
					bit:  0;
			 }
		}
		//cargo decay
		param 5 {
			 param_cargodecay {
						type: int;
						name: string(STR_PARAM_NAME_DECAY);
						desc: string(STR_PARAM_DESC_DECAY);
						min_value: 0;
						max_value: 2;
						def_value: 0;
						names: {
												0: string(STR_PARAM_NORMAL);
												1: string(STR_PARAM_LOW);
												2: string(STR_PARAM_VLOW);
						};
			 }
		}
		// resolution zoom
		param 6 {
		param_resolution {
				name: string(STR_PARAM_NAME_ZOOM);
				desc: string(STR_PARAM_DESC_ZOOM);
				min_value: 0;
				max_value: 1;
				def_value: 0;
				names: {
					0: string(STR_PARAM_ZOOM_1X); 
					1: string(STR_PARAM_ZOOM_2X); 
			};
		}
	}
}


basecost {
		 PR_BUILD_VEHICLE : param_basecostbuy -1;
		 PR_BUILD_VEHICLE_WAGON: param_basecostbuy +3;
		 PR_RUNNING: param_basecostrun +1; //3
}

// Begin railtypetable

// https://newgrf-specs.tt-wiki.net/wiki/TracktypeLabels

railtypetable {
	RAIL,
	ELRL,
	HIGH_SPEED: [
		RHIG, 		
		EHIG, 
		HSTR, 
		SADE, 		// JapanSet Tracks - International Mode - Highspeed line
		SDAE, 		// U&ReRMM 2 - High-Speed Line
		SAEE, 		// JapanSet Tracks - Japanese Mode - Shinkansen highspeed
		SBEE, 		// JapanSet Tracks - Japanese Mode - Modern Shinkansen highspeed
		SEAE,		// U&ReRMM 2 - Modern High-Speed Line
		SFAE,		// U&ReRMM 2 - Very High-Speed Line
		SHAE,		// SUKTS - Very High Speed
		ELRL],
}

// End railtypetable

cargotable {
	PASS,
}

/*	CAPCITY BOOST	*/
if (param_boostcapacity == 1)
{
boostlocal = 15;
}
else
{
boostlocal = 0;
}

/*	PAX CAPACITIES	*/
if (param_basecapacity == 0) {
	param_capacity_local = 60 + boostlocal;
	param_capacity_rapid = 50;
	param_capacity_express = 40;
}

if (param_basecapacity == 1) {
param_capacity_local = 75 + boostlocal;
param_capacity_rapid = 65;
param_capacity_express = 50;
}

if (param_basecapacity == 2) {
param_capacity_local = 90 + boostlocal;
param_capacity_rapid = 75;
param_capacity_express = 60;
}

if (param_basecapacity == 3) {
param_capacity_local = 105 + boostlocal;
param_capacity_rapid = 90;
param_capacity_express = 70;
}
if (param_basecapacity == 4) {
param_capacity_local = 1;
param_capacity_rapid = 1;
param_capacity_express = 1;
}

/*	LOADING SPEEDS	*/
if (param_basecapacity == 0) {
	param_loading_1D = 5; // 1 door //
	param_loading_2D = 10; // 2 doors //
	param_loading_3D = 20; // 3 doors //
	param_loading_4D = 40; // 4 doors //
	param_loading_5D = 45; // 5 doors //
	param_loading_6D = 55; // 6 doors //
}

if (param_basecapacity == 1) {
	param_loading_1D = 10; // 1 door //
	param_loading_2D = 20; // 2 doors //
	param_loading_3D = 30; // 3 doors //
	param_loading_4D = 50; // 4 doors //
	param_loading_5D = 55; // 5 doors //
	param_loading_6D = 65; // 6 doors //
}

if (param_basecapacity == 2) {
	param_loading_1D = 20; // 1 door //
	param_loading_2D = 30; // 2 doors //
	param_loading_3D = 40; // 3 doors //
	param_loading_4D = 60; // 4 doors //
	param_loading_5D = 65; // 5 doors //
	param_loading_6D = 75; // 6 doors //
}

if (param_basecapacity >= 3) {
	param_loading_1D = 30; // 1 door //
	param_loading_2D = 40; // 2 doors //
	param_loading_3D = 50; // 3 doors //
	param_loading_4D = 80; // 4 doors //
	param_loading_5D = 85; // 5 doors //
	param_loading_6D = 95; // 6 doors //
}

/*	CARGO DECAY	*/
if (param_cargodecay == 0) {
	param_decay_local = 185;
	param_decay_rapid = 185;
	param_decay_express = 185;
}
if (param_cargodecay == 1) {
	param_decay_local = 200;
	param_decay_rapid = 300;
	param_decay_express = 500;
}
if (param_cargodecay >= 2) {
	param_decay_local = 400;
	param_decay_rapid = 650;
	param_decay_express = 1000;
}
// Begin template

/* Dummy Template */

template template_dummy (x, y) {
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
  [0, 0, 2, 2, 0, 0, CROP]
}

/* Purchase Template */

template template_purchase (x, y) {
		[]
	 	[]
	 	[]
	 	[]
	 	[]
	 	[]
    	[x, y, 75, 15, -28, -10]
		[]
}

/* EMU Templates */

template template_12_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-14]
    [ x+16,		y,		28,		24,		-16,		-13]
    [ x+52,		y,		48,		14,		-16,		-10]
    [ x+108,	y,		28,		24,		-9,		    -13]
    [ x+144,	y,		8,		36,		-3,			-14]
    [ x+160,	y,		28,		24,		-16,		-13]
    [ x+196,	y,		48,		14,		-16,		-10]
    [ x+252,	y,		28,		24,		-9,			-13]
}

template template_12_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+144,	y,		8,		36,		-3,			-14]
    [ x+160,	y,		28,		24,		-16,		-13]
    [ x+196,	y,		48,		14,		-16,		-10]
    [ x+252,	y,		28,		24,		-9,			-13]
    [ x,		y,		8,		36,		-3,			-14]
    [ x+16,		y,		28,		24,		-16,		-13]
    [ x+52,		y,		48,		14,		-16,		-10]
    [ x+108,	y,		28,		24,		-9,		    -13]
}

// Manifest 4 setup

template template_12m4_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-18]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		14,		-16,		-10]
    [ x+110,	y,		30,		29,		-10,		-19]
    [ x+148,	y,		8,		36,		-3,			-18]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		14,		-16,		-10]
    [ x+258,	y,		30,		29,		-10,		-19]
}

template template_12m4_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-18]
    [ x+164,	y,		30,		29,		-18,		-19]
    [ x+202,	y,		48,		14,		-16,		-10]
    [ x+258,	y,		30,		29,		-10,		-19]
    [ x,		y,		8,		36,		-3,			-18]
    [ x+16,		y,		30,		29,		-18,		-19]
    [ x+54,		y,		48,		14,		-16,		-10]
    [ x+110,	y,		30,		29,		-10,		-19]
}

template template_8_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		28,		-3,			-14]
    [ x+16,		y,		22,		23,		-15,		-13]
    [ x+46,		y,		32,		14,		-16,		-10]
    [ x+86,		y,		22,		23,		-5,			-13]
    [ x+116,	y,		8,		28,		-3,			-14]
    [ x+132,	y,		22,		23,		-15,		-13]
    [ x+162,	y,		32,		14,		-16,		-10]
    [ x+202,	y,		22,		23,		-5,			-13]
}

template template_8_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+116,	y,		8,		28,		-3,			-14]
    [ x+132,	y,		22,		23,		-15,		-13]
    [ x+162,	y,		32,		14,		-16,		-10]
    [ x+202,	y,		22,		23,		-5,			-13]
	[ x,		y,		8,		28,		-3,			-14]
    [ x+16,		y,		22,		23,		-15,		-13]
    [ x+46,		y,		32,		14,		-16,		-10]
    [ x+86,		y,		22,		23,		-5,			-13]
}

template template_6_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		24,		-3,			-14]
    [ x+16,		y,		18,		21,		-11,		-13]
    [ x+42,		y,		24,		14,		-16,		-10]
    [ x+74,		y,		18,		21,		-5,			-13]
    [ x+100,	y,		8,		24,		-3,			-14]
    [ x+116,	y,		18,		21,		-11,		-13]
    [ x+142,	y,		24,		14,		-16,		-10]
    [ x+174,	y,		18,		21,		-5,			-13]
}

template template_6_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+100,	y,		8,		24,		-3,			-14]
    [ x+116,	y,		18,		21,		-11,		-13]
    [ x+142,	y,		24,		14,		-16,		-10]
    [ x+174,	y,		18,		21,		-5,			-13]
	[ x,		y,		8,		24,		-3,			-14]
    [ x+16,		y,		18,		21,		-11,		-13]
    [ x+42,		y,		24,		14,		-16,		-10]
    [ x+74,		y,		18,		21,		-5,			-13]
}

template template_4_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		20,		-3,			-14]
    [ x+16,		y,		14,		19,		-8,			-12]
    [ x+38,		y,		16,		14,		0,			-10]
    [ x+62,		y,		14,		19,		2,			-9]
    [ x+84,		y,		8,		20,		-3,			-5]
    [ x+100,	y,		14,		19,		-14,		-9]
    [ x+122,	y,		16,		14,		-16,		-10]
    [ x+146,	y,		14,		19,		-5,			-13]
}

template template_4_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+84,		y,		8,		20,		-3,			-14] //x
    [ x+100,	y,		14,		19,		-8,			-12]
    [ x+122,	y,		16,		14,		0,			-10] //x
    [ x+146,	y,		14,		19,		2,			-9]
	[ x,		y,		8,		20,		-3,			-5] //x
    [ x+16,		y,		14,		19,		-14,		-9] //x
    [ x+38,		y,		16,		14,		-16,		-10] //x
    [ x+62,		y,		14,		19,		-5,			-13] //x
}

//to update
template template_2x_12_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+148,	y,		8,		36,		-3,			-14]
    [ x+164,	y,		30,		25,		-15,		-13]
    [ x+202,	y,		48,		14,		-16,		-10]
    [ x+258,	y,		30,		25,		-5,			-13]
    [ x,		y,		8,		36,		-3,			-14]
    [ x+16,		y,		30,		25,		-15,		-13]
    [ x+54,		y,		48,		14,		-16,		-10]
    [ x+110,	y,		30,		25,		-5,			-13]
}

// to update
template template_2x_12_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		36,		-3,			-14]
    [ x+16,		y,		30,		25,		-15,		-13]
    [ x+54,		y,		48,		14,		-16,		-10]
    [ x+110,	y,		30,		25,		-5,			-13]
    [ x+148,	y,		8,		36,		-3,			-14]
    [ x+164,	y,		30,		25,		-15,		-13]
    [ x+202,	y,		48,		14,		-16,		-10]
    [ x+258,	y,		30,		25,		-5,			-13]
}

template template_2x_6_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		16,		48,		-6,			-28]
    [ x+32,		y,		36,		42,		-22,		-26]
    [ x+84,		y,		48,		28,		-32,		-20]
    [ x+148,	y,		36,		42,		-10,		-26]
    [ x+200,	y,		16,		48,		-6,			-28]
    [ x+232,	y,		36,		42,		-22,		-26]
    [ x+284,	y,		48,		28,		-32,		-20]
    [ x+348,	y,		36,		42,		-10,		-26]
}

template template_2x_6_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+200,	y,		16,		48,		-6,			-28]
    [ x+232,	y,		36,		42,		-22,		-26]
    [ x+284,	y,		48,		28,		-32,		-20]
    [ x+348,	y,		36,		42,		-10,		-26]
    [ x,		y,		16,		48,		-6,			-28]
    [ x+32,		y,		36,		42,		-22,		-26]
    [ x+84,		y,		48,		28,		-32,		-20]
    [ x+148,	y,		36,		42,		-10,		-26]
}

// End template

 // begin dummy

 // https://www.tt-forums.net/viewtopic.php?f=68&t=53511

spriteset (dummy_sprites, "src/gfx/dummy/empty.png")
{
  [0, 0, 2, 2, 0, 0, CROP]
}

 // end dummy

/* Begin Functions */

switch (FEAT_TRAINS, SELF, func_running_costs, cost, current_speed) {
	0: return cost / 10; // Stopped
	1..15: return cost / 4; // Moving below ~33.5 mph
	return cost; // Track speed
}

switch (FEAT_TRAINS, PARENT, func_is_reversed, vehicle_is_reversed) {return;}

/* End Functions */ 

// Begin sorting

sort(FEAT_TRAINS, [

series_0,
series_template_01,

/* JR East */
series_e5,
series_e6,
 // series_e5e6,

]);

// End sorting

 /* Begin stats */

/* #########################################################
0 Series  https://en.wikipedia.org/wiki/0_Series_Shinkansen 
######################################################### */ 

// Introduction Date
intro_date_0_series = date(1964,10,01);         // Entered service

// Model Life
model_life_0_series = 1986-1964;                // Constructed until 1986

// Speed
switch (FEAT_TRAINS, SELF, sw_0_series_speed, current_date) {
	0..date(1986, 1, 1): return 210;            // Until 1986, Speed = 210 km/h
	return 220;                                 // After 1986, Speed = 220 km/h
}

/* #########################################################
E5 Series https://en.wikipedia.org/wiki/E5_Series_Shinkansen
######################################################### */

// Introduction Date
intro_date_e5_series = date(2011,03,05);        // Entered service

// Model Life
model_life_e5_series = VEHICLE_NEVER_EXPIRES;   // Forever available

// Speed
speed_e5_series = 320;                          // Operational Top Speed                    

/* #########################################################
E6 Series https://en.wikipedia.org/wiki/E6_Series_Shinkansen
######################################################### */

// Introduction Date
intro_date_e6_series = date(2013,03,16);        // Entered service

// Model Life
model_life_e6_series = VEHICLE_NEVER_EXPIRES;   // Forever available

// Speed
speed_e6_series = 320;                          // Operational Top Speed  

 /* End stats */

// Begin grfintegration

//set depot vehicle width to 32px to avoid overlap
train_width_32_px = 1;
//align train properly in depot window
traininfo_y_offset = 2;

// TTD check //
if (ttd_platform != PLATFORM_OPENTTD || openttd_version < version_openttd(1, 2, 0, 22723)) {
	error(FATAL, REQUIRES_OPENTTD, string(GRF_OTTDVER));
}

// 8bpp //
if (ttd_platform != PLATFORM_OPENTTD || openttd_version < version_openttd(1, 2, 0, 22723)) {
	error(FATAL, string(GRF_OTTDVER));
}

// Warn if "JapanSet3: Trains isn't optimal" //
/*
if (((grf_current_status("SZ\0D\00") == 0) && (grf_current_status("DP\30\00") == 0)) || ((grf_future_status("SZ\0D\00") == 0) && (grf_future_status("DP\30\00") == 0)) || ((grf_order_behind("SZ\0D\00") == 0) && (grf_order_behind("DP\30\00") == 0))) {
	error( WARNING, string(GRF_JAPANSET));
}
*/
if (grf_order_behind("BS\42\13") == 0) {
	error(FATAL, string(GRF_JPPLUSSET));
}
/*
if (((grf_order_behind("EN\21\01") == 0) && (grf_order_behind("BS\07\20") != 0)) || ((grf_future_status("EN\21\01") == 0) && (grf_future_status("BS\07\20") == 0)) || ((grf_current_status("EN\21\01") != 0) && (grf_current_status("BS\07\20") == 0))) {
	error(WARNING, string(GRF_NATSSET));
}*/

if (grf_order_behind("SZ\0D\00") == 0) {
	error(WARNING, string(GRF_JAPANSETTRAINS));
}

if (grf_order_behind("JD\A1\E1") == 0) {
	error(WARNING, string(GRF_JAPANSECRETORDER));
}

// End grfintegration

if (param_japansetdisable == 0) {
	disable_item(FEAT_TRAINS, 0, 115); //Disables original vehicles
}

//JPSet3 DUPLICATION
if (param_japansetdisable == 1) {
	engine_override("SZ\0D\00");

	basecost {
			PR_BUILD_VEHICLE : param_basecostbuy -1;
			PR_BUILD_VEHICLE_WAGON: param_basecostbuy +3;
			PR_RUNNING: param_basecostrun -2; //3
			PR_RUNNING_TRAIN_STEAM: param_basecostrun -2;
			PR_RUNNING_TRAIN_DIESEL: param_basecostrun +1;
			PR_RUNNING_TRAIN_ELECTRIC:param_basecostrun -2;

	}

	item(FEAT_TRAINS, japanset_113, 0x49) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_151, 0x13) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_485, 0x38) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_80, 0x11) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_101, 0x30) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_103, 0x60) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_201, 0x25) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_205, 0x28) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_209, 0x68) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_223, 0x42) {
		property {
			climates_available: NO_CLIMATE;
		}
	}
	item(FEAT_TRAINS, japanset_E231, 0x44) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_E233, 0x5B) {
		property {
			climates_available: NO_CLIMATE;
		}
	} 
	item(FEAT_TRAINS, japanset_281, 0x41) {
		property {
			climates_available: NO_CLIMATE;
		}
	}
	item(FEAT_TRAINS, japanset_415, 0x62) {
		property {
			climates_available: NO_CLIMATE;
		}
	}
	item(FEAT_TRAINS, japanset_789, 0x64) {
		property {
			climates_available: NO_CLIMATE;
		}
	}
	item(FEAT_TRAINS, japanset_kh80, 0x48) {
		property {
			climates_available: NO_CLIMATE;
		}
	}
}



/* 
JapanSet3 IDs

01 8620 Steam
02 ED17 Electric
03 D50 Steam
04 C53 Steam
05 C11 Steam
06 C12 Steam
07 40 Series EMU
08 EF10 Electric


*/











/*
NATS DUPLICATION DEPRECIATED
engine_override("EN\21\01");

//disable the 211
item(FEAT_TRAINS, JRC211_6, 0x20D) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC211_5, 0x20C) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC211_4, 0x20B) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC211_3, 0x20A) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC211_2, 0x209) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC313_2, 0x205) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC313_3, 0x206) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC313_4, 0x207) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC313_6, 0x208) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC311, 0x205) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRCKIHA25, 0x201) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRCKIHA75, 0x202) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRCKIHA11, 0x200) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC119_1, 0x203) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC119_2, 0x204) {
	property {
		climates_available: NO_CLIMATE;
	}
}
item(FEAT_TRAINS, JRC373, 0x250) {
	property {
		climates_available: NO_CLIMATE;
	}
}



//engine_override("JD\A1\E1"); jpsecret
//jnr_ef63, 1040

}
*/
/* Begin 0 Series */

/* SPRITES */

/* Lights */
spriteset(spriteset_0_series_head_headlights,  			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_head_rearlights,			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_tail_headlights,   		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_tail_rearlights,   		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

alternative_sprites(spriteset_0_series_head_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/headlights.png")     	 	{template_12_standard(0,0)}
alternative_sprites(spriteset_0_series_head_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/rearlights.png")      	{template_12_reversed(0,0)}	
alternative_sprites(spriteset_0_series_tail_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/headlights.png")     	 	{template_12_standard(0,0)}
alternative_sprites(spriteset_0_series_tail_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/rearlights.png")      	{template_12_reversed(0,0)}	

/* EMU Parts */

// Cab "Head"
spriteset(spriteset_0_series_head_1,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_head_reversed_1,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

spriteset(spriteset_0_series_head_2,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_head_reversed_2,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

	// 1x only for now
alternative_sprites(spriteset_0_series_head_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/1x.png")     	 			{template_12_standard(0,0)}
alternative_sprites(spriteset_0_series_head_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/1x.png")      			{template_12_reversed(0,0)}		
alternative_sprites(spriteset_0_series_head_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/cab/1x.png")     	 			{template_2x_12_standard(0,0)}
alternative_sprites(spriteset_0_series_head_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/cab/1x.png")      			{template_2x_12_reversed(0,0)}

// Coach
spriteset(spriteset_0_series_coach_1,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_coach_reversed_1,    		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

spriteset(spriteset_0_series_coach_2,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_coach_reversed_2,    		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

	// 1x only for now
alternative_sprites(spriteset_0_series_coach_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/coach/1x.png")     	 		{template_12_standard(0,0)}
alternative_sprites(spriteset_0_series_coach_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/coach/1x.png")      			{template_12_reversed(0,0)}	
alternative_sprites(spriteset_0_series_coach_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/coach/1x.png")   				{template_2x_12_standard(0,0)}
alternative_sprites(spriteset_0_series_coach_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/coach/1x.png")  				{template_2x_12_reversed(0,0)}


// Coach Panto
spriteset(spriteset_0_series_panto_1,          			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_panto_reversed_1, 			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

spriteset(spriteset_0_series_panto_2,          			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_panto_reversed_2, 			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

	// 1x only for now
alternative_sprites(spriteset_0_series_panto_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/coach/1xP.png")     	 		{template_12_standard(0,0)}
alternative_sprites(spriteset_0_series_panto_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/coach/1xP.png")      			{template_12_reversed(0,0)}		
alternative_sprites(spriteset_0_series_panto_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/coach/1xP.png")				{template_2x_12_standard(0,0)}
alternative_sprites(spriteset_0_series_panto_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/coach/1xP.png")				{template_2x_12_reversed(0,0)}

// Cab "Tail"
spriteset(spriteset_0_series_tail_1,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_tail_reversed_1,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

spriteset(spriteset_0_series_tail_2,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_0_series_tail_reversed_2,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

	// 1x for now
alternative_sprites(spriteset_0_series_tail_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/1x.png")     	 			{template_12_reversed(0,0)}
alternative_sprites(spriteset_0_series_tail_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/cab/1x.png")      			{template_12_standard(0,0)}		
alternative_sprites(spriteset_0_series_tail_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/cab/1x.png")     	 			{template_2x_12_reversed(0,0)}
alternative_sprites(spriteset_0_series_tail_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/0_series/cab/1x.png")      			{template_2x_12_standard(0,0)}


/* Purchase Menu */
spriteset (spriteset_0_series_purchase,	        		"src/gfx/dummy/purchase.png")               	{template_purchase(0, 0)}
alternative_sprites(spriteset_0_series_purchase,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/0_series/purchase.png")     	 		{template_purchase(0, 0)}

/* PICK THE ZOOM LEVEL*/

// Cab "Head" zoom choice
switch (FEAT_TRAINS, SELF, spriteset_0_series_head, param_resolution) {
0: spriteset_0_series_head_1;
1: spriteset_0_series_head_2;
}

switch (FEAT_TRAINS, SELF, spriteset_0_series_head_reversed, param_resolution) {
0: spriteset_0_series_head_reversed_1;
1: spriteset_0_series_head_reversed_2;
}

// Coach zoom choice
switch (FEAT_TRAINS, SELF, spriteset_0_series_coach, param_resolution) {
0: spriteset_0_series_coach_1;
1: spriteset_0_series_coach_2;
}

switch (FEAT_TRAINS, SELF, spriteset_0_series_coach_reversed, param_resolution) {
0: spriteset_0_series_coach_reversed_1;
1: spriteset_0_series_coach_reversed_2;
}

// Panto Coach zoom choice
switch (FEAT_TRAINS, SELF, spriteset_0_series_panto, param_resolution) {
0: spriteset_0_series_panto_1;
1: spriteset_0_series_panto_2;
}

switch (FEAT_TRAINS, SELF, spriteset_0_series_panto_reversed, param_resolution) {
0: spriteset_0_series_panto_reversed_1;
1: spriteset_0_series_panto_reversed_2;
}

// Cab "Tail" zoom choice
switch (FEAT_TRAINS, SELF, spriteset_0_series_tail, param_resolution) {
0: spriteset_0_series_tail_1;
1: spriteset_0_series_tail_2;
}

switch (FEAT_TRAINS, SELF, spriteset_0_series_tail_reversed, param_resolution) {
0: spriteset_0_series_tail_reversed_1;
1: spriteset_0_series_tail_reversed_2;
}

/* ADD THE LIGHTS */

/* First car of vehicle is a 0_series_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_0_series_head_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_0_series_head;               	// Return the base sprite
    1: return spriteset_0_series_head_headlights;    	// Return the overlay
}

/* POSITION - First car of vehicle is an 0_series_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_0_series_front_position, position_in_consist) {
	1: return sw_0_series_head_with_headlights;
	return spriteset_0_series_head;
}

/* Sprite stack for 0_series_head with rear lights */
switch (FEAT_TRAINS, SELF, sw_0_series_head_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_0_series_head_reversed;        	// Return the base sprite
    1: return spriteset_0_series_head_rearlights;   		// Return the overlay
}

/* POSITION - Last car of vehicle is an 0_series_head. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_0_series_front_reversed_position, position_in_consist_from_end) {
	1: return sw_0_series_head_with_rear_lights;
	return spriteset_0_series_head_reversed;
}

/* Sprite stack for 0_series_cab_reversed with headlights */
switch (FEAT_TRAINS, SELF, sw_0_series_tail_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_0_series_tail_reversed;    		// Return the base sprite
    1: return spriteset_0_series_tail_headlights;    	// Return the overlay
}

/* First car of vehicle is an  0_series_tail. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_0_series_back_reversed_position, position_in_consist) {
	1: return sw_0_series_tail_with_headlights;
	return spriteset_0_series_tail_reversed;
}

/* Sprite stack for 0_series_tail with rear lights */
switch (FEAT_TRAINS, SELF, sw_0_series_tail_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_0_series_tail;    				// Return the base sprite
    1: return spriteset_0_series_tail_rearlights;    	// Return the overlay
}

/* Last car of vehicle is an 0_series_back. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_0_series_back_position, position_in_consist_from_end) {
	1: return sw_0_series_tail_with_rear_lights;
	return spriteset_0_series_tail_reversed;
}

/* FORWARDS AND BACKWARDS */

/* FRONT */
switch (FEAT_TRAINS, PARENT, sw_0_series_reverser_front, vehicle_is_reversed) {
	0: sw_0_series_front_position;						
	sw_0_series_back_reversed_position;
}

/* REAR */
switch (FEAT_TRAINS, PARENT, sw_0_series_reverser_back, vehicle_is_reversed) {
	0: sw_0_series_back_position;
	sw_0_series_front_reversed_position;
}

/* COACHES 
  Repeating 4 switches to create a;
1) Coach Car going forwards and a Panto Car going backwards
2) Coach Car going forwards and a Coach Car going backwards
3) Panto Car going forwards and a Coach Car going backwards
4) Panto Car going forwards and a Panto Car going backwards

   1) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_0_series_reverser_C_P, vehicle_is_reversed) {
	0: spriteset_0_series_coach;
	spriteset_0_series_panto_reversed;
}

/* 2) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_0_series_reverser_C_C, vehicle_is_reversed) {
	0: spriteset_0_series_coach;
	spriteset_0_series_coach_reversed;
}
*/

/* 3) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_0_series_reverser_P_C, vehicle_is_reversed) {
	0: spriteset_0_series_panto;
	spriteset_0_series_coach_reversed;
}

/* 4) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_0_series_reverser_P_P, vehicle_is_reversed) {
	0: spriteset_0_series_panto;
	spriteset_0_series_panto_reversed;
}
*/
/* LENGTH*/

/* Make the Middle long sprite length 8 and the dummy sprites length 2*/
switch (FEAT_TRAINS, SELF, sw_0_series_length, position_in_consist%3) {
    1: return 8;
    return 2;
}

/* PUT TOGETHER THE EMU*/

/* Select the correct part of the train */
switch (FEAT_TRAINS, SELF, sw_0_series_graphics, position_in_articulated_veh) {
	0: dummy_sprites; 					
	1: sw_0_series_reverser_front; 					
	2: dummy_sprites;					
	3: dummy_sprites; 					
	4: sw_0_series_reverser_P_C;					
	5: dummy_sprites;					
	6: dummy_sprites;					
	7: sw_0_series_reverser_C_P;
	8: dummy_sprites;
	9: dummy_sprites;
	10: sw_0_series_reverser_back;
	11: dummy_sprites;
}

/* Assemble an 12-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_0_series_articulated_part, extra_callback_info1) {
	1 .. 11: return series_0;										// Should be same as range above
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, sw_0_series_visual_effect_and_powered, ((position_in_articulated_veh == 0) && !func_is_reversed()) || ((position_in_articulated_veh_from_end == 0) && func_is_reversed()) ) {
	1: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, ENABLE_WAGON_POWER);
	return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

item(FEAT_TRAINS, series_0, 0) {
	property {
		name: 							string(STR_NAME_0_SERIES);
		climates_available:             ALL_CLIMATES;
		introduction_date:              intro_date_0_series;
		model_life:                     model_life_0_series;							
		vehicle_life:                   30;							// Match JapanSet
		reliability_decay:              5;
		refittable_cargo_classes:       bitmask(CC_PASSENGERS);
		refit_cost:                     0;
		default_cargo_type:             PASS;
		cargo_capacity:                 50;							// To approx JapanSet train on the same length
		loading_speed:                  50;							
		cargo_age_period:               278; 						// 1.5 times normal for this expensive long-distance train
		sprite_id:                      SPRITE_ID_NEW_TRAIN; 		// required to enable new graphics
		// speed:                       210 km/h;					
		misc_flags:                     bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_TILT, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		track_type:                     HIGH_SPEED;
		ai_special_flag:                AI_FLAG_PASSENGER;
		running_cost_base:              RUNNING_COST_STEAM;
		engine_class:                   ENGINE_CLASS_ELECTRIC;
		power:                          13500 kW;
		weight:                         1098 tons;
		tractive_effort_coefficient:    0.3;
		
	}
	graphics {
		default:                        sw_0_series_graphics;
		purchase:                       spriteset_0_series_purchase;
		articulated_part:               sw_0_series_articulated_part;
		length:                         sw_0_series_length;
		speed:							sw_0_series_speed;
		//colour_mapping:                 sw_cc_blue_white;
		//cargo_subtype_text:             sw_0_series_cargo_subtype;
		cost_factor:                    257;
		running_cost_factor:            func_running_costs(300);
		purchase_running_cost_factor:   300;
		visual_effect_and_powered:      sw_0_series_visual_effect_and_powered;
		additional_text:                string(STR_ROLE_EXPRESS_PASS);
	}
}

/* End 0 series */

/* Begin e5 Series */

/* SPRITES */

/* Lights */
spriteset(spriteset_e5_series_head_headlights,  		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e5_series_head_rearlights,			"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e5_series_tail_headlights,   		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e5_series_tail_rearlights,   		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}

alternative_sprites(spriteset_e5_series_head_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/headlights.png")     	 	{template_12m4_standard(0,0)}
alternative_sprites(spriteset_e5_series_head_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/rearlights.png")      		{template_12m4_reversed(0,0)}	
alternative_sprites(spriteset_e5_series_tail_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/headlights.png")     	 	{template_12m4_standard(0,0)}
alternative_sprites(spriteset_e5_series_tail_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/rearlights.png")      		{template_12m4_reversed(0,0)}	

/* EMU Parts */

// Cab "Head"
spriteset(spriteset_e5_series_head,             		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e5_series_head_reversed,    		"src/gfx/dummy/empty.png")        					{template_dummy(0,0)}

alternative_sprites(spriteset_e5_series_head,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")     	 			{template_12m4_standard(0,0)}
alternative_sprites(spriteset_e5_series_head_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")      				{template_12m4_reversed(0,0)}		

// Coach
spriteset(spriteset_e5_series_coach,             		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e5_series_coach_reversed,    		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}

alternative_sprites(spriteset_e5_series_coach,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")     	 			{template_12m4_standard(0,80)}
alternative_sprites(spriteset_e5_series_coach_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")      				{template_12m4_reversed(0,80)}	

// Coach Panto
spriteset(spriteset_e5_series_panto,          		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e5_series_panto_reversed, 		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}

alternative_sprites(spriteset_e5_series_panto,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")     	 			{template_12m4_standard(0,40)}
alternative_sprites(spriteset_e5_series_panto_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")      			{template_12m4_reversed(0,40)}		

// Cab "Tail"
spriteset(spriteset_e5_series_tail,             		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e5_series_tail_reversed,    		"src/gfx/dummy/empty.png")        					{template_dummy(0,0)}

alternative_sprites(spriteset_e5_series_tail,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")     	 			{template_12m4_reversed(0,0)}
alternative_sprites(spriteset_e5_series_tail_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/1x.png")      				{template_12m4_standard(0,0)}		

/* Purchase Menu */
spriteset (spriteset_e5_series_purchase,	        	"src/gfx/dummy/purchase.png")               		{template_purchase(0, 0)}
alternative_sprites(spriteset_e5_series_purchase,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e5_series/purchase.png")     	 			{template_purchase(0, 0)}


/* ADD THE LIGHTS */

/* First car of vehicle is a e5_series_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_e5_series_head_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e5_series_head;               	// Return the base sprite
    1: return spriteset_e5_series_head_headlights;    	// Return the overlay
}

/* POSITION - First car of vehicle is an e5_series_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_e5_series_front_position, position_in_consist) {
	1: return sw_e5_series_head_with_headlights;
	return spriteset_e5_series_head;
}

/* Sprite stack for e5_series_head with rear lights */
switch (FEAT_TRAINS, SELF, sw_e5_series_head_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e5_series_head_reversed;        	// Return the base sprite
    1: return spriteset_e5_series_head_rearlights;   		// Return the overlay
}

/* POSITION - Last car of vehicle is an e5_series_head. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_e5_series_front_reversed_position, position_in_consist_from_end) {
	1: return sw_e5_series_head_with_rear_lights;
	return spriteset_e5_series_head_reversed;
}

/* Sprite stack for e5_series_cab_reversed with headlights */
switch (FEAT_TRAINS, SELF, sw_e5_series_tail_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e5_series_tail_reversed;    		// Return the base sprite
    1: return spriteset_e5_series_tail_headlights;    	// Return the overlay
}

/* First car of vehicle is an  e5_series_tail. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_e5_series_back_reversed_position, position_in_consist) {
	1: return sw_e5_series_tail_with_headlights;
	return spriteset_e5_series_tail_reversed;
}

/* Sprite stack for e5_series_tail with rear lights */
switch (FEAT_TRAINS, SELF, sw_e5_series_tail_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e5_series_tail;    				// Return the base sprite
    1: return spriteset_e5_series_tail_rearlights;    	// Return the overlay
}

/* Last car of vehicle is an e5_series_back. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_e5_series_back_position, position_in_consist_from_end) {
	1: return sw_e5_series_tail_with_rear_lights;
	return spriteset_e5_series_tail_reversed;
}

/* FORWARDS AND BACKWARDS */

/* FRONT */
switch (FEAT_TRAINS, PARENT, sw_e5_series_reverser_front, vehicle_is_reversed) {
	0: sw_e5_series_front_position;						
	sw_e5_series_back_reversed_position;
}

/* REAR */
switch (FEAT_TRAINS, PARENT, sw_e5_series_reverser_back, vehicle_is_reversed) {
	0: sw_e5_series_back_position;
	sw_e5_series_front_reversed_position;
}

/* COACHES 
  Repeating 4 switches to create a;
1) Coach Car going forwards and a Panto Car going backwards
2) Coach Car going forwards and a Coach Car going backwards
3) Panto Car going forwards and a Coach Car going backwards
4) Panto Car going forwards and a Panto Car going backwards

   1) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_e5_series_reverser_C_P, vehicle_is_reversed) {
	0: spriteset_e5_series_coach;
	spriteset_e5_series_panto_reversed;
}

/* 2) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_e5_series_reverser_C_C, vehicle_is_reversed) {
	0: spriteset_e5_series_coach;
	spriteset_e5_series_coach_reversed;
}
*/

/* 3) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_e5_series_reverser_P_C, vehicle_is_reversed) {
	0: spriteset_e5_series_panto;
	spriteset_e5_series_coach_reversed;
}

/* 4) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_e5_series_reverser_P_P, vehicle_is_reversed) {
	0: spriteset_e5_series_panto;
	spriteset_e5_series_panto_reversed;
}
*/
/* LENGTH*/

/* Make the Middle long sprite length 8 and the dummy sprites length 2*/
switch (FEAT_TRAINS, SELF, sw_e5_series_length, position_in_consist%3) {
    1: return 8;
    return 2;
}

/* PUT TOGETHER THE EMU*/

/* Select the correct part of the train */
switch (FEAT_TRAINS, SELF, sw_e5_series_graphics, position_in_articulated_veh) {
	0: dummy_sprites; 					
	1: sw_e5_series_reverser_front; 					
	2: dummy_sprites;					
	3: dummy_sprites; 					
	4: sw_e5_series_reverser_P_C;					
	5: dummy_sprites;					
	6: dummy_sprites;					
	7: sw_e5_series_reverser_C_P;
	8: dummy_sprites;
	9: dummy_sprites;
	10: sw_e5_series_reverser_back;
	11: dummy_sprites;
}

/* Assemble an 12-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_e5_series_articulated_part, extra_callback_info1) {
	1 .. 11: return series_e5;										// Should be same as range above
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, sw_e5_series_visual_effect_and_powered, ((position_in_articulated_veh == 0) && !func_is_reversed()) || ((position_in_articulated_veh_from_end == 0) && func_is_reversed()) ) {
	1: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, ENABLE_WAGON_POWER);
	return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

item(FEAT_TRAINS, series_e5, 2) {
	property {
		name: 							string(STR_NAME_E5_SERIES);
		climates_available:             ALL_CLIMATES;
		introduction_date:              intro_date_e5_series;
		model_life:                     model_life_e5_series;		//
		vehicle_life:                   30;							// 
		reliability_decay:              5;
		refittable_cargo_classes:       bitmask(CC_PASSENGERS);
		refit_cost:                     0;
		default_cargo_type:             PASS;
		cargo_capacity:                 40;							// 
		loading_speed:                  50;							
		cargo_age_period:               278; 						// 1.5 times normal for this expensive long-distance train
		sprite_id:                      SPRITE_ID_NEW_TRAIN; 		// required to enable new graphics
		speed:                          speed_e5_series km/h;				// Operational Top Speed
		misc_flags:                     bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_TILT, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		track_type:                     HIGH_SPEED;
		ai_special_flag:                AI_FLAG_PASSENGER;
		running_cost_base:              RUNNING_COST_STEAM;
		engine_class:                   ENGINE_CLASS_ELECTRIC;
		power:                          8050 kW;					// Agreed to Wikipedia
		weight:                         302 tons;					// Agreed to Wikipedia 
		tractive_effort_coefficient:    0.3;

	}
	graphics {
		default:                        sw_e5_series_graphics;
		purchase:                       spriteset_e5_series_purchase;
		articulated_part:               sw_e5_series_articulated_part;
		length:                         sw_e5_series_length;
		//colour_mapping:                 sw_cc_blue_white;
		//cargo_subtype_text:             sw_x2000_cargo_subtype;
		cost_factor:                    257;
		running_cost_factor:            func_running_costs(300);
		purchase_running_cost_factor:   300;
		visual_effect_and_powered:      sw_e5_series_visual_effect_and_powered;
		additional_text:                string(STR_ROLE_EXPRESS_PASS);
	}
}

/* End e5 series */

/* Begin e6 Series */

/* SPRITES */

/* Lights */
spriteset(spriteset_e6_series_head_headlights,  		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e6_series_head_rearlights,			"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e6_series_tail_headlights,   		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e6_series_tail_rearlights,   		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}

alternative_sprites(spriteset_e6_series_head_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/headlights.png")     	 		{template_12m4_standard(0,0)}
alternative_sprites(spriteset_e6_series_head_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/rearlights.png")      			{template_12m4_reversed(0,0)}	
alternative_sprites(spriteset_e6_series_tail_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/headlights.png")     	 		{template_12m4_standard(0,0)}
alternative_sprites(spriteset_e6_series_tail_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/rearlights.png")      			{template_12m4_reversed(0,0)}	

/* EMU Parts */

// Cab "Head"
spriteset(spriteset_e6_series_head,             		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e6_series_head_reversed,    		"src/gfx/dummy/empty.png")        					{template_dummy(0,0)}

alternative_sprites(spriteset_e6_series_head,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")     	 				{template_12m4_standard(0,0)}
alternative_sprites(spriteset_e6_series_head_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")      					{template_12m4_reversed(0,0)}		

// Coach
spriteset(spriteset_e6_series_coach,             		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e6_series_coach_reversed,    		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}

alternative_sprites(spriteset_e6_series_coach,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")     	 				{template_12m4_standard(0,80)}
alternative_sprites(spriteset_e6_series_coach_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")      					{template_12m4_reversed(0,80)}

// Coach Panto
spriteset(spriteset_e6_series_panto,          		"src/gfx/dummy/empty.png")     							{template_dummy(0,0)}
spriteset(spriteset_e6_series_panto_reversed, 		"src/gfx/dummy/empty.png")     							{template_dummy(0,0)}

alternative_sprites(spriteset_e6_series_panto,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")     	 				{template_12m4_standard(0,40)}
alternative_sprites(spriteset_e6_series_panto_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")      					{template_12m4_reversed(0,40)}	

// Cab "Tail"
spriteset(spriteset_e6_series_tail,             		"src/gfx/dummy/empty.png")     						{template_dummy(0,0)}
spriteset(spriteset_e6_series_tail_reversed,    		"src/gfx/dummy/empty.png")        					{template_dummy(0,0)}

alternative_sprites(spriteset_e6_series_tail,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")     	 				{template_12m4_reversed(0,0)}
alternative_sprites(spriteset_e6_series_tail_reversed,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/1x.png")      					{template_12m4_standard(0,0)}		

/* Purchase Menu */
spriteset (spriteset_e6_series_purchase,	        	"src/gfx/dummy/purchase.png")               		{template_purchase(0, 0)}
alternative_sprites(spriteset_e6_series_purchase,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/e6_series/purchase.png")     	 			{template_purchase(0, 0)}

/* ADD THE LIGHTS */

/* First car of vehicle is a e6_series_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_e6_series_head_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e6_series_head;               	// Return the base sprite
    1: return spriteset_e6_series_head_headlights;    	// Return the overlay
}

/* POSITION - First car of vehicle is an e6_series_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_e6_series_front_position, position_in_consist) {
	1: return sw_e6_series_head_with_headlights;
	return spriteset_e6_series_head;
}

/* Sprite stack for e6_series_head with rear lights */
switch (FEAT_TRAINS, SELF, sw_e6_series_head_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e6_series_head_reversed;        	// Return the base sprite
    1: return spriteset_e6_series_head_rearlights;   		// Return the overlay
}

/* POSITION - Last car of vehicle is an e6_series_head. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_e6_series_front_reversed_position, position_in_consist_from_end) {
	1: return sw_e6_series_head_with_rear_lights;
	return spriteset_e6_series_head_reversed;
}

/* Sprite stack for e6_series_cab_reversed with headlights */
switch (FEAT_TRAINS, SELF, sw_e6_series_tail_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e6_series_tail_reversed;    		// Return the base sprite
    1: return spriteset_e6_series_tail_headlights;    	// Return the overlay
}

/* First car of vehicle is an  e6_series_tail. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_e6_series_back_reversed_position, position_in_consist) {
	1: return sw_e6_series_tail_with_headlights;
	return spriteset_e6_series_tail_reversed;
}

/* Sprite stack for e6_series_tail with rear lights */
switch (FEAT_TRAINS, SELF, sw_e6_series_tail_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_e6_series_tail;    				// Return the base sprite
    1: return spriteset_e6_series_tail_rearlights;    	// Return the overlay
}

/* Last car of vehicle is an e6_series_back. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_e6_series_back_position, position_in_consist_from_end) {
	1: return sw_e6_series_tail_with_rear_lights;
	return spriteset_e6_series_tail_reversed;
}

/* FORWARDS AND BACKWARDS */

/* FRONT */
switch (FEAT_TRAINS, PARENT, sw_e6_series_reverser_front, vehicle_is_reversed) {
	0: sw_e6_series_front_position;						
	sw_e6_series_back_reversed_position;
}

/* REAR */
switch (FEAT_TRAINS, PARENT, sw_e6_series_reverser_back, vehicle_is_reversed) {
	0: sw_e6_series_back_position;
	sw_e6_series_front_reversed_position;
}

/* COACHES 
  Repeating 4 switches to create a;
1) Coach Car going forwards and a Panto Car going backwards
2) Coach Car going forwards and a Coach Car going backwards
3) Panto Car going forwards and a Coach Car going backwards
4) Panto Car going forwards and a Panto Car going backwards

   1) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_e6_series_reverser_C_P, vehicle_is_reversed) {
	0: spriteset_e6_series_coach;
	spriteset_e6_series_panto_reversed;
}

/* 2) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_e6_series_reverser_C_C, vehicle_is_reversed) {
	0: spriteset_e6_series_coach;
	spriteset_e6_series_coach_reversed;
}
*/

/* 3) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_e6_series_reverser_P_C, vehicle_is_reversed) {
	0: spriteset_e6_series_panto;
	spriteset_e6_series_coach_reversed;
}

/* 4) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_e6_series_reverser_P_P, vehicle_is_reversed) {
	0: spriteset_e6_series_panto;
	spriteset_e6_series_panto_reversed;
}
*/
/* LENGTH*/

/* Make the Middle long sprite length 8 and the dummy sprites length 2*/
switch (FEAT_TRAINS, SELF, sw_e6_series_length, position_in_consist%3) {
    1: return 8;
    return 2;
}

/* PUT TOGETHER THE EMU*/

/* Select the correct part of the train */
switch (FEAT_TRAINS, SELF, sw_e6_series_graphics, position_in_articulated_veh) {
	0: dummy_sprites; 					
	1: sw_e6_series_reverser_front; 					
	2: dummy_sprites;					
	3: dummy_sprites; 					
	4: sw_e6_series_reverser_P_C;					
	5: dummy_sprites;					
	6: dummy_sprites;					
	7: sw_e6_series_reverser_C_P;
	8: dummy_sprites;
	9: dummy_sprites;
	10: sw_e6_series_reverser_back;
	11: dummy_sprites;
}

/* Assemble an 12-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_e6_series_articulated_part, extra_callback_info1) {
	1 .. 11: return series_e6;										// Should be same as range above
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, sw_e6_series_visual_effect_and_powered, ((position_in_articulated_veh == 0) && !func_is_reversed()) || ((position_in_articulated_veh_from_end == 0) && func_is_reversed()) ) {
	1: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, ENABLE_WAGON_POWER);
	return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

item(FEAT_TRAINS, series_e6, 1) {
	property {
		name: 							string(STR_NAME_E6_SERIES);
		climates_available:             ALL_CLIMATES;
		introduction_date:              intro_date_e6_series;		// see stats.nml
		model_life:                     22;							// see stats.nml
		vehicle_life:                   model_life_e6_series;		// see stats.nml
		reliability_decay:              5;
		refittable_cargo_classes:       bitmask(CC_PASSENGERS);
		refit_cost:                     0;
		default_cargo_type:             PASS;
		cargo_capacity:                 40;							// 
		loading_speed:                  50;							
		cargo_age_period:               278; 						// 1.5 times normal for this expensive long-distance train
		sprite_id:                      SPRITE_ID_NEW_TRAIN; 		// required to enable new graphics
		speed:                          speed_e6_series km/h;		// see stats.nml
		misc_flags:                     bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_TILT, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		track_type:                     HIGH_SPEED;
		ai_special_flag:                AI_FLAG_PASSENGER;
		running_cost_base:              RUNNING_COST_STEAM;
		engine_class:                   ENGINE_CLASS_ELECTRIC;
		power:                          8050 kW;					// Agreed to Wikipedia
		weight:                         302 tons;					// Agreed to Wikipedia 
		tractive_effort_coefficient:    0.3;
		
	}
	graphics {
		default:                        sw_e6_series_graphics;
		purchase:                       spriteset_e6_series_purchase;
		articulated_part:               sw_e6_series_articulated_part;
		length:                         sw_e6_series_length;
		//colour_mapping:                 sw_cc_blue_white;
		//cargo_subtype_text:             sw_x2000_cargo_subtype;
		cost_factor:                    257;
		running_cost_factor:            func_running_costs(300);
		purchase_running_cost_factor:   300;
		visual_effect_and_powered:      sw_e6_series_visual_effect_and_powered;
		additional_text:                string(STR_ROLE_EXPRESS_PASS);
	}
}

/* End e6 series */

/* Begin 0 Series */

/* SPRITES */

/* Lights */
spriteset(spriteset_template_01_head_headlights,  			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_head_rearlights,			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_tail_headlights,   			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_tail_rearlights,   			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

alternative_sprites(spriteset_template_01_head_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/headlights.png")     	 	{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_head_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/rearlights.png")      	{template_12m4_reversed(0,0)}	
alternative_sprites(spriteset_template_01_tail_headlights,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/headlights.png")     	 	{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_tail_rearlights,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/rearlights.png")      	{template_12m4_reversed(0,0)}	

/* EMU Parts */

// Cab "Head"
spriteset(spriteset_template_01_head_1,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_head_reversed_1,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

spriteset(spriteset_template_01_head_2,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_head_reversed_2,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

	// 1x only for now
alternative_sprites(spriteset_template_01_head_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/cab/1x.png")     	 			{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_head_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/cab/1x.png")      			{template_12m4_reversed(0,0)}		
alternative_sprites(spriteset_template_01_head_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/1x.png")     	 			{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_head_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/1x.png")      			{template_12m4_reversed(0,0)}

// Coach
spriteset(spriteset_template_01_coach_1,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_coach_reversed_1,    		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

spriteset(spriteset_template_01_coach_2,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_coach_reversed_2,    		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

	// 1x only for now
alternative_sprites(spriteset_template_01_coach_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/coach/1x.png")     	 		{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_coach_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/coach/1x.png")      			{template_12m4_reversed(0,0)}	
alternative_sprites(spriteset_template_01_coach_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/coach/1x.png")   				{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_coach_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/coach/1x.png")  				{template_12m4_reversed(0,0)}


// Coach Panto
spriteset(spriteset_template_01_panto_1,          			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_panto_reversed_1, 			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

spriteset(spriteset_template_01_panto_2,          			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_panto_reversed_2, 			"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}

	// 1x only for now
alternative_sprites(spriteset_template_01_panto_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/coach/1xP.png")     	 		{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_panto_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/coach/1xP.png")      			{template_12m4_reversed(0,0)}		
alternative_sprites(spriteset_template_01_panto_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/coach/1xP.png")				{template_12m4_standard(0,0)}
alternative_sprites(spriteset_template_01_panto_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/coach/1xP.png")				{template_12m4_reversed(0,0)}

// Cab "Tail"
spriteset(spriteset_template_01_tail_1,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_tail_reversed_1,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

spriteset(spriteset_template_01_tail_2,             		"src/gfx/dummy/empty.png")     					{template_dummy(0,0)}
spriteset(spriteset_template_01_tail_reversed_2,    		"src/gfx/dummy/empty.png")        				{template_dummy(0,0)}

	// 1x for now
alternative_sprites(spriteset_template_01_tail_1,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/cab/1x.png")     	 			{template_12m4_reversed(0,0)}
alternative_sprites(spriteset_template_01_tail_reversed_1,  
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/cab/1x.png")      			{template_12m4_standard(0,0)}		
alternative_sprites(spriteset_template_01_tail_2,     		
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/1x.png")     	 			{template_12m4_reversed(0,0)}
alternative_sprites(spriteset_template_01_tail_reversed_2,  
	ZOOM_LEVEL_IN_2X, BIT_DEPTH_32BPP,     				"src/gfx/template_01/cab/1x.png")      			{template_12m4_standard(0,0)}


/* Purchase Menu */
spriteset (spriteset_template_01_purchase,	        		"src/gfx/dummy/purchase.png")               	{template_purchase(0, 0)}
alternative_sprites(spriteset_template_01_purchase,     		
	ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,     			"src/gfx/template_01/purchase.png")     	 		{template_purchase(0, 0)}

/* PICK THE ZOOM LEVEL*/

// Cab "Head" zoom choice
switch (FEAT_TRAINS, SELF, spriteset_template_01_head, param_resolution) {
0: spriteset_template_01_head_1;
1: spriteset_template_01_head_2;
}

switch (FEAT_TRAINS, SELF, spriteset_template_01_head_reversed, param_resolution) {
0: spriteset_template_01_head_reversed_1;
1: spriteset_template_01_head_reversed_2;
}

// Coach zoom choice
switch (FEAT_TRAINS, SELF, spriteset_template_01_coach, param_resolution) {
0: spriteset_template_01_coach_1;
1: spriteset_template_01_coach_2;
}

switch (FEAT_TRAINS, SELF, spriteset_template_01_coach_reversed, param_resolution) {
0: spriteset_template_01_coach_reversed_1;
1: spriteset_template_01_coach_reversed_2;
}

// Panto Coach zoom choice
switch (FEAT_TRAINS, SELF, spriteset_template_01_panto, param_resolution) {
0: spriteset_template_01_panto_1;
1: spriteset_template_01_panto_2;
}

switch (FEAT_TRAINS, SELF, spriteset_template_01_panto_reversed, param_resolution) {
0: spriteset_template_01_panto_reversed_1;
1: spriteset_template_01_panto_reversed_2;
}

// Cab "Tail" zoom choice
switch (FEAT_TRAINS, SELF, spriteset_template_01_tail, param_resolution) {
0: spriteset_template_01_tail_1;
1: spriteset_template_01_tail_2;
}

switch (FEAT_TRAINS, SELF, spriteset_template_01_tail_reversed, param_resolution) {
0: spriteset_template_01_tail_reversed_1;
1: spriteset_template_01_tail_reversed_2;
}

/* ADD THE LIGHTS */

/* First car of vehicle is a template_01_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_template_01_head_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_template_01_head;               	// Return the base sprite
    1: return spriteset_template_01_head_headlights;    	// Return the overlay
}

/* POSITION - First car of vehicle is an template_01_head. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_template_01_front_position, position_in_consist) {
	1: return sw_template_01_head_with_headlights;
	return spriteset_template_01_head;
}

/* Sprite stack for template_01_head with rear lights */
switch (FEAT_TRAINS, SELF, sw_template_01_head_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_template_01_head_reversed;        	// Return the base sprite
    1: return spriteset_template_01_head_rearlights;   		// Return the overlay
}

/* POSITION - Last car of vehicle is an template_01_head. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_template_01_front_reversed_position, position_in_consist_from_end) {
	1: return sw_template_01_head_with_rear_lights;
	return spriteset_template_01_head_reversed;
}

/* Sprite stack for template_01_cab_reversed with headlights */
switch (FEAT_TRAINS, SELF, sw_template_01_tail_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_template_01_tail_reversed;    		// Return the base sprite
    1: return spriteset_template_01_tail_headlights;    	// Return the overlay
}

/* First car of vehicle is an  template_01_tail. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_template_01_back_reversed_position, position_in_consist) {
	1: return sw_template_01_tail_with_headlights;
	return spriteset_template_01_tail_reversed;
}

/* Sprite stack for template_01_tail with rear lights */
switch (FEAT_TRAINS, SELF, sw_template_01_tail_with_rear_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return spriteset_template_01_tail;    				// Return the base sprite
    1: return spriteset_template_01_tail_rearlights;    	// Return the overlay
}

/* Last car of vehicle is an template_01_back. If it is the last car of the train, display rear lights.  */
switch (FEAT_TRAINS, SELF, sw_template_01_back_position, position_in_consist_from_end) {
	1: return sw_template_01_tail_with_rear_lights;
	return spriteset_template_01_tail_reversed;
}

/* FORWARDS AND BACKWARDS */

/* FRONT */
switch (FEAT_TRAINS, PARENT, sw_template_01_reverser_front, vehicle_is_reversed) {
	0: sw_template_01_front_position;						
	sw_template_01_back_reversed_position;
}

/* REAR */
switch (FEAT_TRAINS, PARENT, sw_template_01_reverser_back, vehicle_is_reversed) {
	0: sw_template_01_back_position;
	sw_template_01_front_reversed_position;
}

/* COACHES 
  Repeating 4 switches to create a;
1) Coach Car going forwards and a Panto Car going backwards
2) Coach Car going forwards and a Coach Car going backwards
3) Panto Car going forwards and a Coach Car going backwards
4) Panto Car going forwards and a Panto Car going backwards

   1) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_template_01_reverser_C_P, vehicle_is_reversed) {
	0: spriteset_template_01_coach;
	spriteset_template_01_panto_reversed;
}

/* 2) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_template_01_reverser_C_C, vehicle_is_reversed) {
	0: spriteset_template_01_coach;
	spriteset_template_01_coach_reversed;
}
*/

/* 3) check reversed */ 
switch (FEAT_TRAINS, PARENT, sw_template_01_reverser_P_C, vehicle_is_reversed) {
	0: spriteset_template_01_panto;
	spriteset_template_01_coach_reversed;
}

/* 4) check reversed */ 
/*
switch (FEAT_TRAINS, PARENT, sw_template_01_reverser_P_P, vehicle_is_reversed) {
	0: spriteset_template_01_panto;
	spriteset_template_01_panto_reversed;
}
*/
/* LENGTH*/

/* Make the Middle long sprite length 8 and the dummy sprites length 2*/
switch (FEAT_TRAINS, SELF, sw_template_01_length, position_in_consist%3) {
    1: return 8;
    return 2;
}

/* PUT TOGETHER THE EMU*/

/* Select the correct part of the train */
switch (FEAT_TRAINS, SELF, sw_template_01_graphics, position_in_articulated_veh) {
	0: dummy_sprites; 					
	1: sw_template_01_reverser_front; 					
	2: dummy_sprites;					
	3: dummy_sprites; 					
	4: sw_template_01_reverser_P_C;					
	5: dummy_sprites;					
	6: dummy_sprites;					
	7: sw_template_01_reverser_C_P;
	8: dummy_sprites;
	9: dummy_sprites;
	10: sw_template_01_reverser_back;
	11: dummy_sprites;
}

/* Assemble an 12-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_template_01_articulated_part, extra_callback_info1) {
	1 .. 11: return series_template_01;										// Should be same as range above
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, sw_template_01_visual_effect_and_powered, ((position_in_articulated_veh == 0) && !func_is_reversed()) || ((position_in_articulated_veh_from_end == 0) && func_is_reversed()) ) {
	1: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, ENABLE_WAGON_POWER);
	return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

item(FEAT_TRAINS, series_template_01,4) {
	property {
		name: 							string(STR_NAME_template_01);
		climates_available:             ALL_CLIMATES;
		introduction_date:              date(1964,01,01);
		model_life:                     50;							
		vehicle_life:                   30;							// Match JapanSet
		reliability_decay:              5;
		refittable_cargo_classes:       bitmask(CC_PASSENGERS);
		refit_cost:                     0;
		default_cargo_type:             PASS;
		cargo_capacity:                 50;							// To approx JapanSet train on the same length
		loading_speed:                  50;							
		cargo_age_period:               278; 						// 1.5 times normal for this expensive long-distance train
		sprite_id:                      SPRITE_ID_NEW_TRAIN; 		// required to enable new graphics
		speed:                       	210 km/h;					
		misc_flags:                     bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_TILT, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		track_type:                     HIGH_SPEED;
		ai_special_flag:                AI_FLAG_PASSENGER;
		running_cost_base:              RUNNING_COST_STEAM;
		engine_class:                   ENGINE_CLASS_ELECTRIC;
		power:                          13500 kW;
		weight:                         1098 tons;
		tractive_effort_coefficient:    0.3;
		
	}
	graphics {
		default:                        sw_template_01_graphics;
		purchase:                       spriteset_template_01_purchase;
		articulated_part:               sw_template_01_articulated_part;
		length:                         sw_template_01_length;
		//speed:							220 km/h;
		//colour_mapping:                 sw_cc_blue_white;
		//cargo_subtype_text:             sw_template_01_cargo_subtype;
		cost_factor:                    257;
		running_cost_factor:            func_running_costs(300);
		purchase_running_cost_factor:   300;
		visual_effect_and_powered:      sw_template_01_visual_effect_and_powered;
		additional_text:                string(STR_ROLE_EXPRESS_PASS);
	}
}

/* End 0 series */
